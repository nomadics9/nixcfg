# This is a default home.nix generated by the follwing hone-manager command
# 
# home-manager init ./

{ config, lib, pkgs, user, ... }:

{
  home.username = lib.mkDefault user;
  home.homeDirectory = lib.mkDefault "/home/${config.home.username}";
  # This value determines the Home Manager release that your configuration is
  # compatible with. This helps avoid breakage when a new Home Manager release
  # introduces backwards incompatible changes.
  #
  # You should not change this value, even if you update Home Manager. If you do
  # want to update the value, then make sure to first check the Home Manager
  # release notes.
  home.stateVersion = "24.05"; # Please read the comment before changing.

  # The home.packages option allows you to install Nix packages into your
  # environment.
  home.packages = with pkgs; [
    # Essentials
    kitty
    firefox
    # Apps
    vlc
    amberol
    webcord
    cava
    ryujinx
    mullvad-vpn
    transmission_4-gtk
    obsidian
    tailscale
    syncthing
    qsyncthingtray
    htop
    nvtopPackages.full
    exiftool
    moonlight-qt
    kdePackages.kdeconnect-kde
    # Dev
    go
    python3
    nim
    bun
    pocketbase
    edgedb
    bruno
    ripgrep
    zip
    #zed-fhs
    android-studio
    android-tools
    jre17_minimal
    # Nvim-Lua
    lua-language-server
    cowsay


    # # Adds the 'hello' command to your environment. It prints a friendly
    # # "Hello, world!" when run.
    # pkgs.hello

    # # It is sometimes useful to fine-tune packages, for example, by applying
    # # overrides. You can do that directly here, just don't forget the
    # # parentheses. Maybe you want to install Nerd Fonts with a limited number of
    # # fonts?
    # (pkgs.nerdfonts.override { fonts = [ "FantasqueSansMono" ]; })

    # # You can also create simple shell scripts directly inside your
    # # configuration. For example, this adds a command 'my-hello' to your
    # # environment:
    # (pkgs.writeShellScriptBin "my-hello" ''
    #   echo "Hello, ${config.home.username}!"
    # '')
  ];

  # Home Manager is pretty good at managing dotfiles. The primary way to manage
  # plain files is through 'home.file'.
  home.file = {
    # # Building this configuration will create a copy of 'dotfiles/screenrc' in
    # # the Nix store. Activating the configuration will then make '~/.screenrc' a
    # # symlink to the Nix store copy.
    # ".screenrc".source = dotfiles/screenrc;

    # # You can also set the file content immediately.
    # ".gradle/gradle.properties".text = ''
    #   org.gradle.console=verbose
    #   org.gradle.daemon.idletimeout=3600000
    # '';
  };

  # Home Manager can also manage your environment variables through
  # 'home.sessionVariables'. If you don't want to manage your shell through Home
  # Manager then you have to manually source 'hm-session-vars.sh' located at
  # either
  #
  #  ~/.nix-profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  ~/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  /etc/profiles/per-user/m3tam3re/etc/profile.d/hm-session-vars.sh
  #
  home.sessionVariables = {
    BROWSER = "firefox";
    EDITOR = "nvim";
    TERMINAL = "kitty";
    NIXOS_OZONE_WL = "1";
    #QT_QPA_PLATFORMTHEME = "qt5ct";
    #QT_WAYLAND_DISABLE_WINDOWDECORATION = "1";
    #QT_QPA_PLATFORM = "wayland-egl";
    #QT_STYLE_OVERRIDE = "kvantum"; 
    #XCURSOR_SIZE = "24";
    #QT_SCALE_FACTOR = "1.25";
    #QT_AUTO_SCREEN_SCALE_FACTOR = "1";
    MOZ_ENABLE_WAYLAND = "1";
    SDL_VIDEODRIVER = "wayland";
    _JAVA_AWT_WM_NONREPARENTING = "1";
    MOZ_DRM_DEVICE = "/dev/dri/card0:/dev/dri/card1";
    WLR_DRM_DEVICES = "/dev/dri/card0:/dev/dri/card1";
    #WLR_NO_HARDWARE_CURSORS = "1"; # if no cursor,uncomment this line
    GBM_BACKEND = "nvidia-drm";
    CLUTTER_BACKEND = "wayland";
    LIBVA_DRIVER_NAME = "iHD";
    WLR_RENDERER = "vulkan";
    VK_DRIVER_FILES = "/run/opengl-driver/share/vulkan/icd.d/nvidia_icd.x86_64.json";
    #__GLX_VENDOR_LIBRARY_NAME = "nvidia";
    #__NV_PRIME_RENDER_OFFLOAD="1";
    XDG_CURRENT_DESKTOP = "Hyprland";
    XDG_SESSION_DESKTOP = "Hyprland";
    XDG_SESSION_TYPE = "wayland";
    GTK_USE_PORTAL = "1";
    GTK_THEME = "Nightfox-dark";
    #NIXOS_XDG_OPEN_USE_PORTAL = "1";
    XDG_CACHE_HOME = "${config.home.homeDirectory}/.cache";
    XDG_CONFIG_HOME = "${config.home.homeDirectory}/.config";
    XDG_BIN_HOME = "${config.home.homeDirectory}/.nix-profile/bin";
    XDG_DATA_HOME = "${config.home.homeDirectory}/.local/share";
  };

  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;
}
